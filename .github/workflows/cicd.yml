on:
  push:
    branches:
      - master
      - prod
  pull_request:
    types: [closed]

name: dotnet-pipeline

jobs:
  deploy:
    name: ci-cd-pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Login to Amazon ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Output Run ID
        run: echo ${{ github.run_id }}

      - name: Output Run Number
        run: echo ${{ github.run_number }}

      - name: Non-Prod-Build,Tag,Push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: webapi-nonprod
          IMAGE_TAG: 1.0.0
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Prod-Build,Tag,Push
        # Publish if prod branch
        if: github.ref == 'refs/heads/prod'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: webapi-prod
          IMAGE_TAG: 1.0.0
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Logout of ECR
        if: always()
        run: docker logout ${{steps.login-ecr.outputs.registry}}

      - name: Create Release
        uses: ncipollo/release-action@v1.8.6
